[{"/home/alejandro.marinasc/Desktop/sprint3/Trackete/frontend/src/index.js":"1","/home/alejandro.marinasc/Desktop/sprint3/Trackete/frontend/src/App.js":"2","/home/alejandro.marinasc/Desktop/sprint3/Trackete/frontend/src/reportWebVitals.js":"3","/home/alejandro.marinasc/Desktop/sprint3/Trackete/frontend/src/Home.js":"4","/home/alejandro.marinasc/Desktop/sprint3/Trackete/frontend/src/TFGEdit.js":"5","/home/alejandro.marinasc/Desktop/sprint3/Trackete/frontend/src/login.js":"6","/home/alejandro.marinasc/Desktop/sprint3/Trackete/frontend/src/registro.js":"7","/home/alejandro.marinasc/Desktop/sprint3/Trackete/frontend/src/AppNavbar.js":"8","/home/alejandro.marinasc/Desktop/sprint3/Trackete/frontend/src/parcelList/Overview.js":"9","/home/alejandro.marinasc/Desktop/sprint3/Trackete/frontend/src/parcelList/Add.js":"10"},{"size":525,"mtime":1651923812868,"results":"11","hashOfConfig":"12"},{"size":824,"mtime":1651923812788,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1651923812876,"results":"14","hashOfConfig":"12"},{"size":5160,"mtime":1651924900015,"results":"15","hashOfConfig":"12"},{"size":3759,"mtime":1651923812792,"results":"16","hashOfConfig":"12"},{"size":3421,"mtime":1651923812868,"results":"17","hashOfConfig":"12"},{"size":2882,"mtime":1651923812876,"results":"18","hashOfConfig":"12"},{"size":571,"mtime":1651923812788,"results":"19","hashOfConfig":"12"},{"size":1658,"mtime":1651923812872,"results":"20","hashOfConfig":"12"},{"size":1022,"mtime":1651923812872,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"oqv1mt",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/alejandro.marinasc/Desktop/sprint3/Trackete/frontend/src/index.js",[],"/home/alejandro.marinasc/Desktop/sprint3/Trackete/frontend/src/App.js",["47"],"import React, { Component } from 'react';\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Switch , Render} from 'react-router-dom';\nimport TFGEdit from \"./TFGEdit\";\nimport Login from './login';\nimport Registro from './registro';\n\n\nclass App extends Component {\n  render() {\n    return (\n        <Router>\n          <Switch>\n            <Route path='/' exact={true} component={Login}/>\n            <Route path='/home' exact={true} component={Home}/>\n            <Route path='/tfgs/:email' exact={true} component={TFGEdit}/>\n            <Route path='/registro' exact={true} component={Registro}/>\n            <Route path='/login' exact={true} component={Login}/>\n            <Route render={() => <h1>No se encuentra disponible</h1> }/>\n\n          </Switch>\n        </Router>\n    )\n  }\n}\n\nexport default App;","/home/alejandro.marinasc/Desktop/sprint3/Trackete/frontend/src/reportWebVitals.js",[],"/home/alejandro.marinasc/Desktop/sprint3/Trackete/frontend/src/Home.js",["48","49","50","51","52","53"],"import React, { Component, useState, useEffect } from 'react';\nimport './style.css';\nimport { Link , useLocation} from 'react-router-dom';\nimport { Button, Container } from 'react-bootstrap';\nimport Overview from \"./parcelList/Overview\";\nimport Add from \"./parcelList/Add\";\n\nfunction Home() {\n\n    const PARCEL_ARRAY = [];\n    const SHIP_NUMBER = \"\";\n    const COMPANY = \"\";\n    const NUMBER_ARRAY = [];\n    const COMPANY_ARRAY = [];\n\n    const [parcel_array, setParcelArray] = useState (PARCEL_ARRAY);\n    const [ship_number, setShipNumber] = useState(SHIP_NUMBER);\n    const [company, setCompany] = useState (COMPANY);\n    const [number_array, setNumberArray] = useState (NUMBER_ARRAY);\n    const [company_array, setCompanyArray] = useState(COMPANY_ARRAY);\n    \n    const location = useLocation();\n    const email = location.state.email;\n\n\n    useEffect(() => {\n        // Update the document title using the browser API\n        document.title = \"Home\";\n        \n        // Database Acesss\n        async function fetchData(){\n            const response = await fetch(\"/ships/\" + email);\n            const myjson = await response.json();\n            setNumberArray(myjson.pedidos.split(\",\"));\n            setCompanyArray(myjson.compañias.split(\",\"));\n            \n        }\n        fetchData();\n    }, []);\n\n    function cargar(){  \n        var array = parcel_array;\n        number_array.map((parcel, i) => {\n            var shipment = {\"shipnumber\" : parcel, \"company\" : company_array[i]};\n            console.log(shipment);\n            array = [...array, shipment];\n        })\n        setParcelArray(array);\n    }\n\n    async function guardar(){\n        \n        var log = {\"pedidos\" : parcel_array.shipnumber.toString(), \"compañias\" : company_array.toString() };\n        await fetch('/ships' + email, {\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(log)\n        });\n    }\n\n    function handleShipNumber(a){\n        setShipNumber(a);\n    }\n\n    function handleCompany(a){\n        //setCompany(a);\n    }\n\n    async function uploadParcel(){\n        const options = {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'aftership-api-key': '612c49aa-28f8-4543-b7d9-1ea47b7f1510'\n            },\n            body: JSON.stringify({tracking: {tracking_number: ship_number}})\n        };\n            \n        const response = await fetch('https://api.aftership.com/v4/trackings', options);\n        const myjson = await response.json();\n        setCompany(myjson.data.tracking.slug);\n    }\n\n    function saveParcel(){\n        var shipment = {\"shipnumber\" : ship_number, \"company\" : company};\n        var array = [...parcel_array, shipment];\n        guardar();\n        setParcelArray(array);\n        setShipNumber(\"\");\n        setCompany(\"\");\n    }\n\n\n    const UPSTRUE = true;\n    const SEURTRUE = true;\n   \n    const [upsTrue, setUpsTrue] = useState(UPSTRUE);\n    const [seurTrue, setSeurTrue] = useState(SEURTRUE);\n\n    return (\n        <div class=\"login\">\n          \n            <br></br>            <br></br>\n            <br></br>            <br></br>\n            <br></br>            <br></br>\n            <br></br>            <br></br>\n            <br></br>            <br></br>\n            <br></br>            <br></br>\n            <br></br>\n            <h2><img src={process.env.PUBLIC_URL + \"/images/Logo.png\"} height=\"150\" widht=\"150\" alt=\"Image\" align = \"center\"></img></h2>\n\n            <div class=\"row\">\n                <button type='button'><Link to=\"/Login\" style={{color:\"#FFF\"}}>Cerrar sesion</Link></button>\n                \n            </div>\n   \n            <br></br>\n            <br></br>\n\n            <div class=\"row\">\n                <h2>Hola {email} !</h2>\n                <Button onClick={() => cargar()}>Cargar</Button>\n            </div>\n\n            <br></br>\n            <br></br>\n\n            <Add ship_number={ship_number} company={company} handleShipNumber={a => handleShipNumber(a)} \n                handleCompany={a => handleCompany(a)} clickSearch={() => uploadParcel()} clickSave={()=> saveParcel()}/>\n\n            <br></br>\n\n            <div class=\"col-12  mainPagecontainer \">\n                <h2 class=\"blog-post-title\">Pedidos</h2>\n\n                <label><input type=\"checkbox\" value=\"upsTrue\" onChange={e => setUpsTrue(!upsTrue)}/>UPS</label>\n                <label><input type=\"checkbox\" value= \"seurTrue\" onChange={e => setSeurTrue(!seurTrue)}/>SEUR</label>\n\n                <div class=\"aside\">\n                    <table>\n                    {parcel_array.map((parcel, i) => {return (<Overview index = {i} number={parcel.shipnumber} \n                        company={parcel.company}/>)})}\n                    </table>\n                </div>   \n            </div>\n\n\n\n            <h2><img src={process.env.PUBLIC_URL + \"/images/LogoSinTexto.png\"} height=\"150\" widht=\"150\" alt=\"Image\" align = \"center\"/></h2>\n        </div>    \n\n\n    );\n  }\n\n\nexport default Home;","/home/alejandro.marinasc/Desktop/sprint3/Trackete/frontend/src/TFGEdit.js",[],"/home/alejandro.marinasc/Desktop/sprint3/Trackete/frontend/src/login.js",["54","55","56","57","58","59","60","61","62","63","64"],"import React, { Component, useState, useEffect } from 'react';\nimport './style.css';\nimport { Link, BrowserRouter, Route, Switch , useHistory} from 'react-router-dom';\nimport { Alert, Button, ButtonGroup, Container } from 'react-bootstrap';\nimport {CryptoJS} from 'crypto-js';\nimport { propTypes } from 'react-bootstrap/esm/Image';\nimport './App.js';\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\n\nfunction Login() {\n\n    const PASSWORD = \"\";\n    const EMAIL =\"\";\n\n    const [email, setEmail]= useState(EMAIL);\n    const [password, setPassword]= useState(PASSWORD);\n\n    const history = useHistory();\n    \n        async function comprobar(e){\n            e.preventDefault();\n            const text = email;\n            // console.log(text);\n            const response = await fetch(\"/ships/\" + text);\n            const myjson = await response.json();\n            var encryptedPass = myjson.pass;\n            // console.log(encryptedPass);\n            var CryptoJS=require(\"crypto-js\");\n            var bytes = CryptoJS.AES.decrypt(encryptedPass, 'KeyISST');\n            var decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n            if(password===decryptedData){\n                setEmail(\"CORRECTO\");\n                setPassword(\"PASSWORD\");\n                //this.props.history.push(\"/ships/email/paco@gmail.com\" )\n                //ir a /home/email\n                // return fetch('/home');\n                history.push(\"/home\",{email:text});\n                setEmail(\"\");\n                setPassword(\"\");\n            }\n            else{\n                setEmail(\"INCORRECTO\");\n                setPassword(\"PASSWORD INCORRECTA\");\n                //Mensaje de error\n\n            }\n        }\n        function Alert(props){\n            return <MuiAlert elevation={6} variant =\"filled\" {...props}/>\n\n        }\n \n\n\n\n\n    return (\n\n\n\n        <div class=\"login\">\n\n            <h2><img src={process.env.PUBLIC_URL + \"/images/Logo.png\"} ></img></h2>\n\n            <div class=\"container\" id=\"container\">\n\n                    <br></br>\n                \n\n                    <h2 align=\"center\">Iniciar Sesión</h2>\n                    \n                    <form  onSubmit={comprobar}>\n                        <label>\n                            <input type = \"text\" name =\"email\" placeholder='Email' value={email} onChange={e=>setEmail(e.target.value)} />\n                        </label>\n                            \n\n\n \n\n\n\n                        <label>\n                            <input type=\"password\" name=\"name\" placeholder='Contraseña' value={password} onChange={e=>setPassword(e.target.value)} />\n                        </label>\n\n\n                    <h2>\n                        <input type=\"submit\" value={\"Iniciar sesión\"}/>\n                    </h2>\n                    </form>\n\n\n                    <br></br>\n                    <br></br>\n                    <br></br>\n\n\n                    <h2>¿Todavía no te has registrado?</h2>\n                    <h5>Date de alta en nuestro servicio</h5>\n                    <h2>\n                        <ButtonGroup>\n                        <Button class=\"Button\" align=\"center\" > <Link to=\"/registro\" style={{color:\"#FFF\"}}> Regístrate </Link></Button>\n                        </ButtonGroup>\n                    </h2>\n                    \n \n\n                   \n\n\n               \n  \n            </div>\n        </div>    \n\n    );\n}\n\nexport default Login;","/home/alejandro.marinasc/Desktop/sprint3/Trackete/frontend/src/registro.js",["65","66","67","68","69","70","71","72"],"import React, { Component, useState, useEffect } from 'react';\nimport './style.css';\nimport { Link, BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Button, Container } from 'react-bootstrap';\nimport {CryptoJS} from 'crypto-js';\n\n\nfunction Registro() {\n\n    const EMAIL = \"\";\n    const PASSWORD = \"\";\n    const NAME =\"\";\n\n    const [email, setEmail]= useState(EMAIL);\n    const [password, setPassword]= useState(PASSWORD);\n    const [name, setName]= useState(NAME);\n\n\n\n    async function register(){\n        var CryptoJS=require(\"crypto-js\");\n        var result = CryptoJS.AES.encrypt(JSON.stringify(password), 'KeyISST').toString();\n        var log = {\"name\":name, \"email\": email, \"pass\": result, \"pedidos\": \"\", \"compañias\": \"\" }\n        await fetch('/ships', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(log)\n        });\n        // setPassword(result);\n        setEmail(\"\");\n        setPassword(\"\");\n        setName(\"\");\n    }\n\n\n\n    return (\n\n        <div class=\"login\">\n\n            <h2><img src={process.env.PUBLIC_URL + \"/images/Logo.png\"} ></img></h2>\n\n            <div class=\"container\" id=\"container\">\n\n                    <br></br>\n                \n\n                    <h2 align=\"center\">Registrarse</h2>\n                                        \n                    <form>\n                        <label>\n                            <input type = \"text\" name =\"name\" placeholder='Nombre' value={name} onChange={e=>setName(e.target.value)}/>\n                        </label>\n                            \n\n                    </form>\n\n                    <form>\n                        <label>\n                            <input type = \"text\" name =\"name\" placeholder='Email' value={email} onChange={e=>setEmail(e.target.value)}/>\n                        </label>\n                            \n\n                    </form>\n\n \n\n\n                    <form>\n                        <label>\n                            <input type=\"password\" name=\"name\" placeholder='Contraseña' value={password} onChange={e=>setPassword(e.target.value)}/>\n                        </label>\n                    </form>\n\n                    <h2>\n                        <Button onClick={()=>register()} align=\"center\"> Regístrate</Button>   \n                    </h2>\n\n                    <br></br>\n                    <br></br>\n                    <br></br>\n\n\n                    <h2>¿Ya tienes cuenta?</h2>\n                    <h5>Inicia sesión con nosotros</h5>\n                    <h2>\n                    <Button class=\"Button\" align=\"center\" > <Link to=\"/login\" style={{color:\"#FFF\"}}> Iniciar sesión</Link></Button>\n                    </h2>\n            </div>\n        </div>    \n\n    );\n}\n\nexport default Registro;","/home/alejandro.marinasc/Desktop/sprint3/Trackete/frontend/src/AppNavbar.js",[],"/home/alejandro.marinasc/Desktop/sprint3/Trackete/frontend/src/parcelList/Overview.js",["73","74"],"import React, { useState, useEffect } from 'react';\nimport '../style.css';\n\n\nexport default function Overview(props) {\n\n    const PARCEL = [{}];\n\n    const [parcel, setParcel] = useState(PARCEL);\n    const [loading, setLoading] = useState(true);\n\n    const link = \"https://api.aftership.com/v4/trackings/\" + props.company + \"/\" + props.number + \"/\";\n\n    useEffect(() => {\n        async function fetchData() {\n            const options = {\n                method: 'GET',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    'aftership-api-key': '612c49aa-28f8-4543-b7d9-1ea47b7f1510'\n                }\n            }\n            const response = await fetch(link, options);      \n            const myjson = await response.json();\n            //console.log(myjson.data.tracking.slug);\n            setParcel(myjson);\n            setTimeout(() => {setLoading(false)}, 750);\n        }\n        fetchData();\n      }, []);\n\n      return (\n        <tbody>\n            <tr key={\"number\" + props.index} align=\"center\">\n                <td>{loading ? <div>Cargando</div> : parcel.data.tracking ?  <img src={process.env.PUBLIC_URL + \"/images/\" + parcel.data.tracking.slug + \".png\"} height=\"200\" widht=\"200\"></img> : <div></div>}</td>\n               <td>{loading ? <div>Cargando</div> : parcel.data.tracking ? <p>{parcel.data.tracking.slug}</p> : <div></div>}</td>\n               <td></td>\n               <td>{loading ? <div>Cargando</div> : parcel.data.tracking ? <p>{parcel.data.tracking.subtag_message}</p> : <div></div>}</td>\n            </tr>\n        </tbody>\n    );\n\n}","/home/alejandro.marinasc/Desktop/sprint3/Trackete/frontend/src/parcelList/Add.js",[],{"ruleId":"75","severity":1,"message":"76","line":3,"column":51,"nodeType":"77","messageId":"78","endLine":3,"endColumn":57},{"ruleId":"75","severity":1,"message":"79","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"80","line":4,"column":18,"nodeType":"77","messageId":"78","endLine":4,"endColumn":27},{"ruleId":"81","severity":1,"message":"82","line":39,"column":8,"nodeType":"83","endLine":39,"endColumn":10,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":43,"column":38,"nodeType":"87","messageId":"88","endLine":43,"endColumn":40},{"ruleId":"89","severity":1,"message":"90","line":114,"column":17,"nodeType":"91","endLine":114,"endColumn":126},{"ruleId":"89","severity":1,"message":"90","line":153,"column":17,"nodeType":"91","endLine":153,"endColumn":135},{"ruleId":"75","severity":1,"message":"79","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"92","line":1,"column":38,"nodeType":"77","messageId":"78","endLine":1,"endColumn":47},{"ruleId":"75","severity":1,"message":"93","line":3,"column":16,"nodeType":"77","messageId":"78","endLine":3,"endColumn":29},{"ruleId":"75","severity":1,"message":"94","line":3,"column":31,"nodeType":"77","messageId":"78","endLine":3,"endColumn":36},{"ruleId":"75","severity":1,"message":"95","line":3,"column":38,"nodeType":"77","messageId":"78","endLine":3,"endColumn":44},{"ruleId":"75","severity":1,"message":"96","line":4,"column":10,"nodeType":"77","messageId":"78","endLine":4,"endColumn":15},{"ruleId":"75","severity":1,"message":"80","line":4,"column":38,"nodeType":"77","messageId":"78","endLine":4,"endColumn":47},{"ruleId":"75","severity":1,"message":"97","line":5,"column":9,"nodeType":"77","messageId":"78","endLine":5,"endColumn":17},{"ruleId":"75","severity":1,"message":"98","line":6,"column":10,"nodeType":"77","messageId":"78","endLine":6,"endColumn":19},{"ruleId":"75","severity":1,"message":"96","line":49,"column":18,"nodeType":"77","messageId":"78","endLine":49,"endColumn":23},{"ruleId":"99","severity":1,"message":"100","line":64,"column":17,"nodeType":"91","endLine":64,"endColumn":73},{"ruleId":"75","severity":1,"message":"79","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"92","line":1,"column":38,"nodeType":"77","messageId":"78","endLine":1,"endColumn":47},{"ruleId":"75","severity":1,"message":"93","line":3,"column":16,"nodeType":"77","messageId":"78","endLine":3,"endColumn":29},{"ruleId":"75","severity":1,"message":"94","line":3,"column":31,"nodeType":"77","messageId":"78","endLine":3,"endColumn":36},{"ruleId":"75","severity":1,"message":"95","line":3,"column":38,"nodeType":"77","messageId":"78","endLine":3,"endColumn":44},{"ruleId":"75","severity":1,"message":"80","line":4,"column":18,"nodeType":"77","messageId":"78","endLine":4,"endColumn":27},{"ruleId":"75","severity":1,"message":"97","line":5,"column":9,"nodeType":"77","messageId":"78","endLine":5,"endColumn":17},{"ruleId":"99","severity":1,"message":"100","line":44,"column":17,"nodeType":"91","endLine":44,"endColumn":73},{"ruleId":"81","severity":1,"message":"101","line":31,"column":10,"nodeType":"83","endLine":31,"endColumn":12,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"100","line":36,"column":78,"nodeType":"91","endLine":36,"endColumn":187},"no-unused-vars","'Render' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'Container' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'email'. Either include it or remove the dependency array.","ArrayExpression",["103"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useEffect' is defined but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Alert' is defined but never used.","'CryptoJS' is defined but never used.","'propTypes' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'link'. Either include it or remove the dependency array.",["104"],{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [email]",{"range":"109","text":"110"},"Update the dependencies array to be: [link]",{"range":"111","text":"112"},[1303,1305],"[email]",[1008,1010],"[link]"]