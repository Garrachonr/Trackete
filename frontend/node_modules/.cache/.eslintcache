[{"/Users/garra/Desktop/Trackete/frontend/src/index.js":"1","/Users/garra/Desktop/Trackete/frontend/src/reportWebVitals.js":"2","/Users/garra/Desktop/Trackete/frontend/src/App.js":"3","/Users/garra/Desktop/Trackete/frontend/src/Home.js":"4","/Users/garra/Desktop/Trackete/frontend/src/registro.js":"5","/Users/garra/Desktop/Trackete/frontend/src/login.js":"6","/Users/garra/Desktop/Trackete/frontend/src/parcelList/Add.js":"7","/Users/garra/Desktop/Trackete/frontend/src/parcelList/Overview.js":"8","/Users/garra/Desktop/Trackete/frontend/src/parcelList/Details.js":"9"},{"size":525,"mtime":1652256845723,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1652256845724,"results":"12","hashOfConfig":"11"},{"size":720,"mtime":1652256845720,"results":"13","hashOfConfig":"11"},{"size":7136,"mtime":1652271343882,"results":"14","hashOfConfig":"11"},{"size":2874,"mtime":1652256845724,"results":"15","hashOfConfig":"11"},{"size":4753,"mtime":1652256845723,"results":"16","hashOfConfig":"11"},{"size":1022,"mtime":1652256845723,"results":"17","hashOfConfig":"11"},{"size":2830,"mtime":1652269925661,"results":"18","hashOfConfig":"11"},{"size":990,"mtime":1652256845724,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"105277a",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"/Users/garra/Desktop/Trackete/frontend/src/index.js",[],"/Users/garra/Desktop/Trackete/frontend/src/reportWebVitals.js",[],"/Users/garra/Desktop/Trackete/frontend/src/App.js",["44"],"import React, { Component } from 'react';\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Switch , Render} from 'react-router-dom';\nimport Login from './login';\nimport Registro from './registro';\n\n\nclass App extends Component {\n  render() {\n    return (\n        <Router>\n          <Switch>\n            <Route path='/' exact={true} component={Registro}/>\n            <Route path='/home' exact={true} component={Home}/>\n            <Route path='/registro' exact={true} component={Registro}/>\n            <Route path='/login' exact={true} component={Login}/>\n            <Route render={() => <h1>No se encuentra disponible</h1> }/>\n\n          </Switch>\n        </Router>\n    )\n  }\n}\n\nexport default App;","/Users/garra/Desktop/Trackete/frontend/src/Home.js",["45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61"],"import React, { Component, useState, useEffect } from 'react';\nimport './style.css';\nimport { Link , useLocation} from 'react-router-dom';\nimport { Button, Container } from 'react-bootstrap';\nimport Overview from \"./parcelList/Overview\";\nimport Add from \"./parcelList/Add\";\n\nfunction Home() {\n\n    const PARCEL_ARRAY = [];\n    const SHIP_NUMBER = \"\";\n    const COMPANY = \"\";\n    const NUMBER_ARRAY = [];\n    const COMPANY_ARRAY = [];\n    const DETAILS = false;\n\n    const [parcel_array, setParcelArray] = useState (PARCEL_ARRAY);\n    const [ship_number, setShipNumber] = useState(SHIP_NUMBER);\n    const [company, setCompany] = useState (COMPANY);\n    const [number_array, setNumberArray] = useState (NUMBER_ARRAY);\n    const [company_array, setCompanyArray] = useState(COMPANY_ARRAY);\n    const [details, setDetails] = useState(DETAILS);\n\n    \n\n    const location = useLocation();\n    const email = location.state.email;\n    //const name = location.state.name;\n\n\n    useEffect(() => {\n        // Update the document title using the browser API\n        document.title = \"Home\";\n        \n        // Database Acesss\n        async function fetchData(){\n            const response = await fetch(\"/ships/\" + email);\n            const myjson = await response.json();\n            setNumberArray(myjson.pedidos.split(\",\"));\n            setCompanyArray(myjson.compañias.split(\",\"));\n            \n        }\n        fetchData();\n    }, []);\n\n    function cargar(){  \n        var array = parcel_array;\n        number_array.map((parcel, i) => {\n            var shipment = {\"shipnumber\" : parcel, \"company\" : company_array[i]};\n            console.log(shipment);\n            array = [...array, shipment];\n        })\n        setParcelArray(array);\n        console.log(array);\n    }\n\n    async function guardar(){\n        var string1 = \"\";\n        parcel_array.map((parcel,i) => {string1 = string1 + \",\" + parcel.shipnumber.toString()});\n        var string2 = \"\";\n        parcel_array.map((parcel,i) => {string2 = string2 + \",\" + parcel.company.toString()});\n        var log = {\"pedidos\" : string1, \"compañias\" : string2 };\n        const link = '/ships/' + email;\n        //console.log(link);\n        await fetch(link, {\n            method: 'PUT',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(log)\n        });\n    }\n\n    function handleShipNumber(a){\n        setShipNumber(a);\n    }\n\n    function handleCompany(a){\n        //setCompany(a);\n    }\n\n    async function uploadParcel(){\n        const options = {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'aftership-api-key': '3f7f21d6-0de5-4505-8eec-84f61d4359df'\n            },\n            body: JSON.stringify({tracking: {tracking_number: ship_number}})\n        };\n        console.log(options);\n        const response = await fetch('https://api.aftership.com/v4/trackings', options);\n        console.log(response);\n        const myjson = await response.json();\n        setCompany(myjson.data.tracking.slug);\n    }\n\n    async function uploadParcel2(){\n        const options = {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'Tracking-Api-Key':'5t7cf0b0-o958-r2k1-fdr9-fytkx05xeast'\n            },\n            body: `{\\\"tracking_number\\\":\\\"${ship_number}\\\"}`\n        };\n            \n        const response = await fetch('https://api.trackingmore.com/v3/trackings/detect', options);\n        const myjson = await response.json();\n        setCompany(myjson.data.courier_name);\n    }\n\n    function saveParcel(){\n        var shipment = {\"shipnumber\" : ship_number, \"company\" : company};\n        var array = [...parcel_array, shipment];\n        setParcelArray(array);\n        //guardar();\n        setShipNumber(\"\");\n        setCompany(\"\");\n    }\n\n    function seeDetails(){\n        setDetails(!details);\n    }\n\n    const UPSTRUE = true;\n    const SEURTRUE = true;\n    const MRWTRUE = true;\n    const DHLTRUE = true;\n    const CORREOSTRUE = true;\n   \n    const [upsTrue, setUpsTrue] = useState(UPSTRUE);\n    const [seurTrue, setSeurTrue] = useState(SEURTRUE);\n    const [mrwTrue, setMrwTrue] = useState(MRWTRUE);\n    const [dhlTrue, setDhlTrue] = useState(DHLTRUE);\n    \n\n\n    return (\n        <div class=\"login\">\n          \n            <br></br>            <br></br>\n            <br></br>            <br></br>\n            <br></br>            <br></br>\n            <br></br>            <br></br>\n            <br></br>            <br></br>\n            <br></br>            <br></br>\n            <br></br>\n            <h2><img src={process.env.PUBLIC_URL + \"/images/Logo.png\"} height=\"150\" widht=\"150\" alt=\"Image\" align = \"center\"></img></h2>\n\n\n   \n            <br></br>\n            <br></br>\n\n            <div class=\"row\">\n                <h3>¡Bienvenido {email} !</h3>\n                <button type='button' onClick={() => cargar()}>Cargar</button>\n            </div>\n\n            <br></br>\n            <br></br>\n\n            <Add ship_number={ship_number} company={company} handleShipNumber={a => handleShipNumber(a)} \n                handleCompany={a => handleCompany(a)} clickSearch={() => uploadParcel()} clickSave={()=> saveParcel()}/>\n\n            <br></br>\n\n            <div class=\"col-12  mainPagecontainer \">\n                <h2 class=\"blog-post-title\">Pedidos</h2>\n\n                <div align=\"center\">\n                    <label>Ocultar:  |</label>\n                    <label><input type=\"checkbox\"  value={upsTrue} onChange={e => setUpsTrue(!upsTrue)}/>|  UPS  |</label>\n                    <label><input type=\"checkbox\"  value= {seurTrue} onChange={e => setSeurTrue(!seurTrue)}/>|  SEUR  |</label>\n                    <label><input type=\"checkbox\"  value= {mrwTrue} onChange={e => setSeurTrue(!mrwTrue)}/>|  MRW  |</label>\n                    <label><input type=\"checkbox\"  value= {dhlTrue} onChange={e => setSeurTrue(!dhlTrue)}/>|  DHL  |</label>\n                    <label><input type=\"checkbox\"  value= \"correosTrue\" onChange={e => setSeurTrue()}/>|  Correos  |</label>\n\n                </div>\n\n                <div>\n                    <table>\n                    {parcel_array.map((parcel, i) => {\n                        var aux = true\n                        if(parcel.company==\"ups\"){aux = upsTrue}\n                        else{aux = true}\n                                                if(aux){\n                            return (<Overview index = {i} number={parcel.shipnumber} \n                                company={parcel.company} details = {details} clickDetails={() => seeDetails()}/>)}\n                        else {return <div></div>}})}\n                    </table>\n                </div>   \n            </div>\n     <div >\n            <button type='button' onClick={() => guardar()}><Link to=\"/Login\" >Cerrar sesion</Link></button>                \n     </div>\n        </div>  \n\n\n\n\n    );\n  }\n\n\nexport default Home;","/Users/garra/Desktop/Trackete/frontend/src/registro.js",["62","63","64","65","66","67","68","69","70"],"import React, { Component, useState, useEffect } from 'react';\nimport './style.css';\nimport { Link, BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Button, Container } from 'react-bootstrap';\nimport {CryptoJS} from 'crypto-js';\n\n\nfunction Registro() {\n\n    const EMAIL = \"\";\n    const PASSWORD = \"\";\n    const NAME =\"\";\n\n    const [email, setEmail]= useState(EMAIL);\n    const [password, setPassword]= useState(PASSWORD);\n    const [name, setName]= useState(NAME);\n\n\n\n    async function register(){\n        var CryptoJS=require(\"crypto-js\");\n        var result = CryptoJS.AES.encrypt(JSON.stringify(password), 'KeyISST').toString();\n        var log = {\"name\":name, \"email\": email, \"pass\": result, \"pedidos\": \"\", \"compañias\": \"\" }\n        await fetch('/ships', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(log)\n        });\n        // setPassword(result);\n        setEmail(\"\");\n        setPassword(\"\");\n        setName(\"\");\n    }\n\n\n\n    return (\n\n        <div class=\"login\">\n\n            <h2><img src={process.env.PUBLIC_URL + \"/images/Logo.png\"} ></img></h2>\n\n            <div class=\"container\" id=\"container\">\n\n                    <br></br>\n                \n\n                    <h2 align=\"center\">Registrarse</h2>\n                                        \n                    <form>\n                        <label>\n                            <input type = \"text\" name =\"name\" placeholder='Nombre' value={name} onChange={e=>setName(e.target.value)}/>\n                        </label>\n                            \n\n                    </form>\n\n                    <form>\n                        <label>\n                            <input type = \"text\" name =\"name\" placeholder='Email' value={email} onChange={e=>setEmail(e.target.value)}/>\n                        </label>\n                            \n\n                    </form>\n\n \n\n\n                    <form>\n                        <label>\n                            <input type=\"password\" name=\"name\" placeholder='Contraseña' value={password} onChange={e=>setPassword(e.target.value)}/>\n                        </label>\n                    </form>\n\n                    <h2>\n                        <button type='button' onClick={()=>register()} align=\"center\"> Regístrate</button>   \n                    </h2>\n\n                    <br></br>\n                    <br></br>\n                    <br></br>\n\n\n                    <h2>¿Ya tienes cuenta?</h2>\n                    <h5>Inicia sesión con nosotros</h5>\n                    <h2>\n                    <button type='button'  align=\"center\" > <Link to=\"/login\" > Iniciar sesión</Link></button>\n                    </h2>\n            </div>\n        </div>    \n\n    );\n}\n\nexport default Registro;","/Users/garra/Desktop/Trackete/frontend/src/login.js",["71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87"],"import React, { Component, useState, useEffect } from 'react';\nimport './style.css';\nimport { Link, BrowserRouter, Route, Switch , useHistory} from 'react-router-dom';\nimport { Alert, Button, ButtonGroup, Container } from 'react-bootstrap';\nimport {CryptoJS} from 'crypto-js';\nimport { propTypes } from 'react-bootstrap/esm/Image';\nimport './App.js';\nimport swal from \"sweetalert\";\n\n\nfunction Login() {\n\n    const PASSWORD = \"\";\n    const EMAIL =\"\";\n\n    const [email, setEmail]= useState(EMAIL);\n    const [password, setPassword]= useState(PASSWORD);\n\n    const history = useHistory();\n    \n\n\n        async function comprobar(e){\n\n            \n            e.preventDefault();\n            const text = email;\n            const text2 = password;\n\n            //Comrpobar que se ha escrito el usuario y contraseña\n            if(text == \"\" || text2 == \"\"){\n                //Mensaje de error\n                var alerta = swal({title: \"Introduzca un usuario y contraseña\", text:\"Por favor vuelva a intentarlo\", icon: \"warning\"});\n                function alert(){\n                    return alerta;\n                };\n                alert();\n                setEmail(\"\");\n                setPassword(\"\");\n            }\n\n\n            // console.log(text);\n            const response = await fetch(\"/ships/\" + text);\n\n            //Si la respuesta de la bdd no es buena, mensaje de error\n            if(!response.ok){\n                var alerta = swal({title: \"Usuario o contraseña incorectos\", text:\"Por favor vuelva a intentarlo\" , icon: \"warning\"});\n                function alert(){\n                    return alerta;\n                };\n                alert();\n                setEmail(\"\");\n                setPassword(\"\");\n                //Mensaje de error\n\n            }\n            //si la respuesta es buena, recuperamos el JSON\n            const myjson = await response.json();\n            //console.log(myjson.value);\n\n                var encryptedPass = myjson.pass;\n                var text3 = myjson.name;\n                // console.log(encryptedPass);\n                var CryptoJS=require(\"crypto-js\");\n                var bytes = CryptoJS.AES.decrypt(encryptedPass, 'KeyISST');\n                var decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n                if(password===decryptedData){\n\n                    var alerta = swal({title: \"Login correcto\", text:\"Bienvenido\", timer:\"500\"});\n                    function alert(){\n                        return alerta;\n                    };\n                    alert();\n                    history.push(\"/home\",{email:email});\n                    //history.push(\"/home\",{name:text3});\n                }\n                else{ \n                    var alerta = swal({title: \"Usuario o contraseña incorectos\", text:\"Por favor vuelva a intentarlo\", icon: \"warning\"});\n                    function alert(){\n                        return alerta;\n                    };\n                    alert();\n                    setEmail(\"\");\n                    setPassword(\"\");\n                    //Mensaje de error\n                };\n            \n\n        }\n\n\n \n\n\n\n\n    return (\n\n\n\n        <div class=\"login\">\n\n            <h2><img src={process.env.PUBLIC_URL + \"/images/Logo.png\"} ></img></h2>\n\n            <div class=\"container\" id=\"container\">\n\n                    <br></br>\n                \n\n                    <h2 align=\"center\">Iniciar Sesión</h2>\n                    \n                    <form  onSubmit={comprobar}>\n                        <label>\n                            <input type = \"text\" name =\"email\" placeholder='Email' value={email} onChange={e=>setEmail(e.target.value)} />\n                        </label>\n                            \n\n\n \n\n\n\n                        <label>\n                            <input type=\"password\" name=\"name\" placeholder='Contraseña' value={password} onChange={e=>setPassword(e.target.value)} />\n                        </label>\n\n\n                    <h2>\n                        <button type='sumbit button'  value={\"Iniciar sesión\"}> Iniciar sesion</button>\n                    </h2>\n                  \n                    </form>\n\n\n                    <br></br>\n                    <br></br>\n                    <br></br>\n\n\n                    <h2>¿Todavía no te has registrado?</h2>\n                    <h5>Date de alta en nuestro servicio</h5>\n                    <h2>\n                        <ButtonGroup>\n                        <button type='button' align=\"center\" > <Link to=\"/registro\" > Regístrate </Link></button>\n                        </ButtonGroup>\n                    </h2>\n                    \n \n\n                   \n\n\n               \n  \n            </div>\n        </div>    \n\n    );\n}\n\nexport default Login;","/Users/garra/Desktop/Trackete/frontend/src/parcelList/Add.js",[],"/Users/garra/Desktop/Trackete/frontend/src/parcelList/Overview.js",["88","89","90"],"import React, { useState, useEffect } from 'react';\nimport '../style.css';\nimport Details from \"./Details\";\n\n\nexport default function Overview(props) {\n\n    const PARCEL = [{}];\n    const PARCEL2 = [{}];\n\n    const [parcel, setParcel] = useState(PARCEL);\n    //const [parcel2, setParcel2] = useState(PARCEL2);\n    const [loading, setLoading] = useState(true);\n\n    const link = \"https://api.aftership.com/v4/trackings/\" + props.company + \"/\" + props.number;\n   // const raw = \"{\\r\\n    \\\"trackingNumber\\\": \\\"\" + props.number + \"\\\"}\";\n\n    useEffect(() => {\n        async function fetchData() {\n            const options = {\n                method: 'GET',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    'aftership-api-key': '3f7f21d6-0de5-4505-8eec-84f61d4359df'\n                }\n            }\n            const response = await fetch(link, options);      \n            const myjson = await response.json();\n            //console.log(myjson.data.tracking.slug);\n            setParcel(myjson);\n            setTimeout(() => {setLoading(false)}, 750);\n        }\n\n      /*  async function fetchData2() {\n            var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json; charset=utf-8\");\n            myHeaders.append(\"Authorization\", \"apik_DZwsl9HU3SYb0Mm6K8Ga9STAr0WRZg\");\n\n            var requestOptions = {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n                redirect: 'follow'\n            };\n            const response = await fetch(\"https://api.ship24.com/public/v1/tracking/search\", requestOptions);      \n            const myjson = await response.json();\n            //console.log(myjson.data.tracking.slug);\n            setParcel2(myjson);\n            setTimeout(() => {setLoading(false)}, 750);\n        } */\n        fetchData();\n     //   fetchData2();\n      }, []);\n\n      return (\n        <tbody align = \"justify\">\n            <tr key={\"number\" + props.index} align=\"center\">\n                <td>{loading ? <div></div> : parcel.data.tracking ?  <img src={process.env.PUBLIC_URL + \"/images/\" + parcel.data.tracking.slug + \".png\"} height=\"200\" widht=\"200\"></img> : <div></div>}</td>\n               <td></td>\n               <td>{loading ? <div></div> : parcel.data.tracking ? <p>{parcel.data.tracking.subtag_message}</p> : <div></div>}</td>\n\n               <td>{loading ? <div></div> : parcel.data.tracking ? <Details details = {props.details} parcel = {parcel.data.tracking} clickDetails={()=> props.clickDetails()}/> : <div></div>}</td>\n            </tr>\n        </tbody>\n    );\n    // <td>{loading ? <div></div> : parcel2.data.trackings ? <p>{parcel2.data.trackings.shipment.originCountryCode}</p> : <div></div>}</td>\n\n\n}","/Users/garra/Desktop/Trackete/frontend/src/parcelList/Details.js",["91","92","93"],"import React, { useState, useEffect } from 'react';\nimport '../style.css';\nimport {Button} from 'react-bootstrap';\n\n\nexport default function Details(props) {\n\n    function clickDetails(){\n        props.clickDetails();\n    }\n\n      return (<div>\n            <button type=\"button\" onClick={() => clickDetails()}>Detalles</button>\n            {props.details ? <div></div> : \n                            <div class=\"container\" id=\"container\">\n                                <h4>Peso: {props.parcel.shipment_weight} kg</h4>\n                                <br></br>\n                                <h4>País de Origen: {props.parcel.origin_country_iso3}</h4>\n                                <br></br>\n                                <h4>Día de recogida: {props.parcel.shipment_pickup_date}</h4>\n                                <br></br>\n                                <h4>Día de entrega: {props.parcel.shipment_delivery_date}</h4>\n                            </div>}\n        </div>\n    );\n\n}",{"ruleId":"94","severity":1,"message":"95","line":3,"column":51,"nodeType":"96","messageId":"97","endLine":3,"endColumn":57},{"ruleId":"94","severity":1,"message":"98","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"99","line":4,"column":10,"nodeType":"96","messageId":"97","endLine":4,"endColumn":16},{"ruleId":"94","severity":1,"message":"100","line":4,"column":18,"nodeType":"96","messageId":"97","endLine":4,"endColumn":27},{"ruleId":"101","severity":1,"message":"102","line":44,"column":8,"nodeType":"103","endLine":44,"endColumn":10,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":48,"column":38,"nodeType":"107","messageId":"108","endLine":48,"endColumn":40},{"ruleId":"105","severity":1,"message":"106","line":59,"column":37,"nodeType":"107","messageId":"108","endLine":59,"endColumn":39},{"ruleId":"105","severity":1,"message":"106","line":61,"column":37,"nodeType":"107","messageId":"108","endLine":61,"endColumn":39},{"ruleId":"94","severity":1,"message":"109","line":100,"column":20,"nodeType":"96","messageId":"97","endLine":100,"endColumn":33},{"ruleId":"110","severity":1,"message":"111","line":108,"column":21,"nodeType":"112","messageId":"113","endLine":108,"endColumn":22,"suggestions":"114"},{"ruleId":"110","severity":1,"message":"111","line":108,"column":38,"nodeType":"112","messageId":"113","endLine":108,"endColumn":39,"suggestions":"115"},{"ruleId":"110","severity":1,"message":"111","line":108,"column":41,"nodeType":"112","messageId":"113","endLine":108,"endColumn":42,"suggestions":"116"},{"ruleId":"110","severity":1,"message":"111","line":108,"column":57,"nodeType":"112","messageId":"113","endLine":108,"endColumn":58,"suggestions":"117"},{"ruleId":"94","severity":1,"message":"118","line":133,"column":11,"nodeType":"96","messageId":"97","endLine":133,"endColumn":22},{"ruleId":"94","severity":1,"message":"119","line":137,"column":21,"nodeType":"96","messageId":"97","endLine":137,"endColumn":31},{"ruleId":"94","severity":1,"message":"120","line":138,"column":21,"nodeType":"96","messageId":"97","endLine":138,"endColumn":31},{"ruleId":"121","severity":1,"message":"122","line":152,"column":17,"nodeType":"123","endLine":152,"endColumn":126},{"ruleId":"124","severity":1,"message":"125","line":189,"column":42,"nodeType":"126","messageId":"127","endLine":189,"endColumn":44},{"ruleId":"94","severity":1,"message":"98","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"128","line":1,"column":38,"nodeType":"96","messageId":"97","endLine":1,"endColumn":47},{"ruleId":"94","severity":1,"message":"129","line":3,"column":16,"nodeType":"96","messageId":"97","endLine":3,"endColumn":29},{"ruleId":"94","severity":1,"message":"130","line":3,"column":31,"nodeType":"96","messageId":"97","endLine":3,"endColumn":36},{"ruleId":"94","severity":1,"message":"131","line":3,"column":38,"nodeType":"96","messageId":"97","endLine":3,"endColumn":44},{"ruleId":"94","severity":1,"message":"99","line":4,"column":10,"nodeType":"96","messageId":"97","endLine":4,"endColumn":16},{"ruleId":"94","severity":1,"message":"100","line":4,"column":18,"nodeType":"96","messageId":"97","endLine":4,"endColumn":27},{"ruleId":"94","severity":1,"message":"132","line":5,"column":9,"nodeType":"96","messageId":"97","endLine":5,"endColumn":17},{"ruleId":"133","severity":1,"message":"134","line":44,"column":17,"nodeType":"123","endLine":44,"endColumn":73},{"ruleId":"94","severity":1,"message":"98","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"128","line":1,"column":38,"nodeType":"96","messageId":"97","endLine":1,"endColumn":47},{"ruleId":"94","severity":1,"message":"129","line":3,"column":16,"nodeType":"96","messageId":"97","endLine":3,"endColumn":29},{"ruleId":"94","severity":1,"message":"130","line":3,"column":31,"nodeType":"96","messageId":"97","endLine":3,"endColumn":36},{"ruleId":"94","severity":1,"message":"131","line":3,"column":38,"nodeType":"96","messageId":"97","endLine":3,"endColumn":44},{"ruleId":"94","severity":1,"message":"135","line":4,"column":10,"nodeType":"96","messageId":"97","endLine":4,"endColumn":15},{"ruleId":"94","severity":1,"message":"99","line":4,"column":17,"nodeType":"96","messageId":"97","endLine":4,"endColumn":23},{"ruleId":"94","severity":1,"message":"100","line":4,"column":38,"nodeType":"96","messageId":"97","endLine":4,"endColumn":47},{"ruleId":"94","severity":1,"message":"132","line":5,"column":9,"nodeType":"96","messageId":"97","endLine":5,"endColumn":17},{"ruleId":"94","severity":1,"message":"136","line":6,"column":10,"nodeType":"96","messageId":"97","endLine":6,"endColumn":19},{"ruleId":"124","severity":1,"message":"125","line":31,"column":21,"nodeType":"126","messageId":"127","endLine":31,"endColumn":23},{"ruleId":"124","severity":1,"message":"125","line":31,"column":36,"nodeType":"126","messageId":"127","endLine":31,"endColumn":38},{"ruleId":"137","severity":1,"message":"138","line":48,"column":21,"nodeType":"96","messageId":"139","endLine":48,"endColumn":27},{"ruleId":"94","severity":1,"message":"140","line":63,"column":21,"nodeType":"96","messageId":"97","endLine":63,"endColumn":26},{"ruleId":"137","severity":1,"message":"138","line":70,"column":25,"nodeType":"96","messageId":"139","endLine":70,"endColumn":31},{"ruleId":"137","severity":1,"message":"138","line":79,"column":25,"nodeType":"96","messageId":"139","endLine":79,"endColumn":31},{"ruleId":"133","severity":1,"message":"134","line":104,"column":17,"nodeType":"123","endLine":104,"endColumn":73},{"ruleId":"94","severity":1,"message":"141","line":9,"column":11,"nodeType":"96","messageId":"97","endLine":9,"endColumn":18},{"ruleId":"101","severity":1,"message":"142","line":54,"column":10,"nodeType":"103","endLine":54,"endColumn":12,"suggestions":"143"},{"ruleId":"133","severity":1,"message":"134","line":59,"column":70,"nodeType":"123","endLine":59,"endColumn":179},{"ruleId":"94","severity":1,"message":"144","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":25},{"ruleId":"94","severity":1,"message":"128","line":1,"column":27,"nodeType":"96","messageId":"97","endLine":1,"endColumn":36},{"ruleId":"94","severity":1,"message":"99","line":3,"column":9,"nodeType":"96","messageId":"97","endLine":3,"endColumn":15},"no-unused-vars","'Render' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'Button' is defined but never used.","'Container' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'email'. Either include it or remove the dependency array.","ArrayExpression",["145"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'uploadParcel2' is defined but never used.","no-useless-escape","Unnecessary escape character: \\\".","TemplateElement","unnecessaryEscape",["146","147"],["148","149"],["150","151"],["152","153"],"'CORREOSTRUE' is assigned a value but never used.","'setMrwTrue' is assigned a value but never used.","'setDhlTrue' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'CryptoJS' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Alert' is defined but never used.","'propTypes' is defined but never used.","no-redeclare","'alerta' is already defined.","redeclared","'text3' is assigned a value but never used.","'PARCEL2' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'link'. Either include it or remove the dependency array.",["154"],"'useState' is defined but never used.",{"desc":"155","fix":"156"},{"messageId":"157","fix":"158","desc":"159"},{"messageId":"160","fix":"161","desc":"162"},{"messageId":"157","fix":"163","desc":"159"},{"messageId":"160","fix":"164","desc":"162"},{"messageId":"157","fix":"165","desc":"159"},{"messageId":"160","fix":"166","desc":"162"},{"messageId":"157","fix":"167","desc":"159"},{"messageId":"160","fix":"168","desc":"162"},{"desc":"169","fix":"170"},"Update the dependencies array to be: [email]",{"range":"171","text":"172"},"removeEscape",{"range":"173","text":"174"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"175","text":"176"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"177","text":"174"},{"range":"178","text":"176"},{"range":"179","text":"174"},{"range":"180","text":"176"},{"range":"181","text":"174"},{"range":"182","text":"176"},"Update the dependencies array to be: [link]",{"range":"183","text":"184"},[1425,1427],"[email]",[3509,3510],"",[3509,3509],"\\",[3526,3527],[3526,3526],[3529,3530],[3529,3529],[3545,3546],[3545,3545],[1969,1971],"[link]"]