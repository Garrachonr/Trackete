{"version":3,"sources":["parcelList/Overview.js","parcelList/Add.js","Home.js","AppNavbar.js","TFGList.js","TFGEdit.js","App.js","reportWebVitals.js","index.js"],"names":["Overview","props","useState","parcel","setParcel","loading","setLoading","link","company","number","useEffect","a","options","method","headers","Accept","fetch","response","json","myjson","setTimeout","fetchData","align","data","tracking","src","slug","height","widht","subtag_message","index","Add","class","type","className","value","ship_number","autoComplete","placeholder","onChange","e","handleShipNumber","target","handleCompany","Button","onClick","clickSearch","clickSave","Home","parcel_array","setParcelArray","setShipNumber","setCompany","number_array","setNumberArray","company_array","setCompanyArray","log","body","JSON","stringify","tracking_number","saveParcel","shipment","array","guardar","map","i","pedido","document","title","alt","console","cargar","uploadParcel","shipnumber","AppNavbar","state","isOpen","toggle","bind","this","setState","Navbar","color","dark","expand","NavbarBrand","tag","Link","to","Component","TFGList","tfgs","remove","then","email","updatedTFGs","filter","tfgList","tfg","style","whiteSpace","nombre","titulo","tutor","status","ButtonGroup","size","Container","fluid","Table","width","TFGEdit","emptyItem","pass","memoria","nota","item","handleChange","handleSubmit","match","params","event","name","preventDefault","history","push","Form","onSubmit","FormGroup","Label","for","Input","id","withRouter","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"qQAIe,SAASA,EAASC,GAE7B,IAEA,EAA4BC,mBAFb,CAAC,KAEhB,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAO,0CAA4CN,EAAMO,QAAU,IAAMP,EAAMQ,OAAS,IAqB5F,OAnBFC,qBAAU,WAAM,4CACZ,gCAAAC,EAAA,6DACUC,EAAU,CACZC,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChB,oBAAqB,yCANjC,SAS2BC,MAAMT,EAAMK,GATvC,cASUK,EATV,gBAUyBA,EAASC,OAVlC,OAUUC,EAVV,OAYIf,EAAUe,GACVC,YAAW,WAAOd,GAAW,KAAS,KAb1C,4CADY,uBAAC,WAAD,wBAgBZe,KACC,IAGD,gCACI,qBAAiCC,MAAM,SAAvC,UACI,6BAAKjB,EAAU,2CAAsBF,EAAOoB,KAAKC,SAAY,qBAAKC,IAA8B,WAAatB,EAAOoB,KAAKC,SAASE,KAAO,OAAQC,OAAO,MAAMC,MAAM,QAAe,0BACpL,6BAAKvB,EAAU,2CAAsBF,EAAOoB,KAAKC,SAAW,4BAAIrB,EAAOoB,KAAKC,SAASE,OAAY,0BACjG,uBACA,6BAAKrB,EAAU,2CAAsBF,EAAOoB,KAAKC,SAAW,4BAAIrB,EAAOoB,KAAKC,SAASK,iBAAsB,4BAJrG,SAAW5B,EAAM6B,SC9BvB,SAASC,EAAI9B,GAkBxB,OACI,sBAAK+B,MAAM,MAAX,UACI,uBAAOC,KAAK,OAAOC,UAAU,OAAOC,MAAOlC,EAAMmC,YAAaC,aAAa,MAAMC,YAAc,8BAA8BC,SAAY,SAAAC,GAAC,OAlBlJ,SAA0BA,GACtBvC,EAAMwC,iBAAiBD,GAiB2HC,CAAiBD,EAAEE,OAAOP,UACxK,uBACA,uBAAOF,KAAK,OAAOC,UAAU,OAAOC,MAAOlC,EAAMO,QAAS6B,aAAa,MAAME,SAAY,SAAAC,GAAC,OAhBlG,SAAuBA,GACnBvC,EAAM0C,cAAcH,GAe8EG,CAAcH,EAAEE,OAAOP,UACrH,uBACA,cAACS,EAAA,EAAD,CAAQV,UAAU,aAAcW,QAAS,WAb7C5C,EAAM6C,eAaF,6BACA,cAACF,EAAA,EAAD,CAAQV,UAAU,aAAcW,QAAS,WAV7C5C,EAAM8C,aAUF,4BCwHGC,MA9If,WAEI,IAMA,EAAuC9C,mBANlB,IAMrB,mBAAO+C,EAAP,KAAqBC,EAArB,KACA,EAAqChD,mBANjB,IAMpB,mBAAOkC,EAAP,KAAoBe,EAApB,KACA,EAA8BjD,mBANd,IAMhB,mBAAOM,EAAP,KAAgB4C,EAAhB,KACA,EAAuClD,mBANlB,IAMrB,mBAAOmD,EAAP,KAAqBC,EAArB,KACA,EAAyCpD,mBANnB,IAMtB,mBAAOqD,EAAP,KAAsBC,EAAtB,KAZY,4CAyCZ,4BAAA7C,EAAA,6DAEQ8C,EAAM,CAAC,KAAO,QAAQ,MAAS,iBAAkB,KAAQ,MAAO,QAAWjD,EAC/D,OAAU4B,EAAa,OAAU,MAAM,QAAU,OAHrE,SAIUpB,MAAM,SAAU,CAClBH,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpB4C,KAAMC,KAAKC,UAAUH,KAV7B,4CAzCY,kEA+DZ,gCAAA9C,EAAA,6DACUC,EAAU,CACZC,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChB,oBAAqB,wCAEzB2C,KAAMC,KAAKC,UAAU,CAACpC,SAAU,CAACqC,gBAAiBzB,MAR1D,SAW2BpB,MAAM,yCAA0CJ,GAX3E,cAWUK,EAXV,gBAYyBA,EAASC,OAZlC,OAYUC,EAZV,OAaIiC,EAAWjC,EAAOI,KAAKC,SAASE,MAbpC,4CA/DY,sBA+EZ,SAASoC,IACL,IAAIC,EAAW,CAAC,WAAe3B,EAAa,QAAY5B,GACpDwD,EAAK,sBAAOf,GAAP,CAAqBc,KAjFtB,mCAkFRE,GACAf,EAAec,GACfb,EAAc,IACdC,EAAW,IAGf,OA1EA1C,qBAAU,WAAM,4CAKZ,gCAAAC,EAAA,sEAC2BK,MAAM,+BADjC,cACUC,EADV,gBAEyBA,EAASC,OAFlC,OAEUC,EAFV,OAGQI,EAAO,GACXA,EAAOJ,EAAO+C,KAAI,SAAC/D,EAAQgE,GAAT,OAAehE,EAAOiE,UACxCd,EAAe/B,GACfA,EAAOJ,EAAO+C,KAAI,SAAC/D,EAAQgE,GAAT,OAAehE,EAAOK,WACxCgD,EAAgBjC,GAPpB,6CALY,sBAEZ8C,SAASC,MAAQ,OAFL,mCAcZjD,KACD,IA4DC,sBAAKW,MAAM,QAAX,UAEI,uBACA,uBACA,uBAEA,qBAAKP,IAA8B,mBAAoBE,OAAO,MAAMC,MAAM,MAAM2C,IAAI,QAAQjD,MAAQ,WAEpG,sBAAKU,MAAM,MAAX,UACI,cAACY,EAAA,EAAD,CAAQZ,MAAM,QAAd,qBACA,cAACY,EAAA,EAAD,+BAIJ,uBACA,uBAEA,sBAAKZ,MAAM,MAAX,UACI,+CACA,cAACY,EAAA,EAAD,CAAQC,QAAS,kBA7E7B,WACI,IAAImB,EAAQf,EACZI,EAAaa,KAAI,SAAC/D,EAAQgE,GACtB,IAAIJ,EAAW,CAAC,WAAe5D,EAAQ,QAAYoD,EAAcY,IACjEK,QAAQf,IAAIM,GACZC,EAAK,sBAAOA,GAAP,CAAcD,OAEvBb,EAAec,GAsEgBS,IAAvB,uBAGJ,uBACA,uBAEA,cAAC1C,EAAD,CAAKK,YAAaA,EAAa5B,QAASA,EAASiC,iBAAkB,SAAA9B,GAAC,OA3D5E,SAA0BA,GACtBwC,EAAcxC,GA0D8D8B,CAAiB9B,IACrFgC,cAAe,SAAAhC,KAAuBmC,YAAa,kBAnHnD,0CAmHyD4B,IAAgB3B,UAAW,kBAAKe,OAE7F,uBAEA,sBAAK9B,MAAM,6BAAX,UACI,oBAAIA,MAAM,kBAAV,qBAEA,qBAAKA,MAAM,QAAX,SACI,gCACCiB,EAAaiB,KAAI,SAAC/D,EAAQgE,GAAO,OAAQ,cAACnE,EAAD,CAAU8B,MAASqC,EAAG1D,OAAQN,EAAOwE,WAC3EnE,QAASL,EAAOK,oBAK5B,uBACA,uBAEA,qBAAKiB,IAA8B,2BAA4BE,OAAO,MAAMC,MAAM,MAAM2C,IAAI,QAAQjD,MAAQ,e,uECxInGsD,E,kDACjB,WAAY3E,GAAQ,IAAD,8BACf,cAAMA,IACD4E,MAAQ,CAACC,QAAQ,GACtB,EAAKC,OAAS,EAAKA,OAAOC,KAAZ,gBAHC,E,0CAMnB,WACIC,KAAKC,SAAS,CACVJ,QAASG,KAAKJ,MAAMC,W,oBAI5B,WACI,OAAO,cAACK,EAAA,EAAD,CAAQC,MAAM,OAAOC,MAAI,EAACC,OAAO,KAAjC,SACH,cAACC,EAAA,EAAD,CAAaC,IAAKC,IAAMC,GAAG,IAA3B,wB,GAf2BC,aCCjCC,E,kDAEF,WAAY3F,GAAQ,IAAD,8BACf,cAAMA,IACD4E,MAAQ,CAACgB,KAAM,IACpB,EAAKC,OAAS,EAAKA,OAAOd,KAAZ,gBAHC,E,qDAMnB,WAAqB,IAAD,OAChBhE,MAAM,SACD+E,MAAK,SAAA9E,GAAQ,OAAIA,EAASC,UAC1B6E,MAAK,SAAAxE,GAAI,OAAI,EAAK2D,SAAS,CAACW,KAAMtE,S,2DAG3C,WAAayE,GAAb,oBAAArF,EAAA,sEACUK,MAAM,SAAD,OAAUgF,GAAS,CAC1BnF,OAAQ,SACRC,QAAS,CACL,OAAU,mBACV,eAAgB,sBAErBiF,MAAK,WACJ,IAAIE,EAAc,YAAI,EAAKpB,MAAMgB,MAAMK,QAAO,SAAA/B,GAAC,OAAIA,EAAE6B,QAAUA,KAC/D,EAAKd,SAAS,CAACW,KAAMI,OAT7B,2C,2EAaA,WAAU,IAAD,OAGCE,EAFSlB,KAAKJ,MAAbgB,KAEc3B,KAAI,SAAAkC,GACrB,OAAO,+BACH,oBAAIC,MAAO,CAACC,WAAY,UAAxB,SAAoCF,EAAIG,SACxC,6BAAKH,EAAIJ,QACT,6BAAKI,EAAII,SACT,6BAAKJ,EAAIK,QACT,6BAAKL,EAAIM,SACT,6BACI,eAACC,EAAA,EAAD,WACI,cAAC,IAAD,CAAQC,KAAK,KAAKxB,MAAM,UAAUI,IAAKC,IAAMC,GAAI,SAAWU,EAAIJ,MAAhE,kBACA,cAAC,IAAD,CAAQY,KAAK,KAAKxB,MAAM,SAASvC,QAAS,kBAAM,EAAKiD,OAAOM,EAAIJ,QAAhE,2BATII,EAAIJ,UAexB,OACI,gCACI,cAAC,EAAD,IACA,eAACa,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACI,qBAAK5E,UAAU,cAAf,SACI,cAAC,IAAD,CAAQkD,MAAM,UAAUI,IAAKC,IAAMC,GAAG,YAAtC,uBAEJ,sCACA,eAACqB,EAAA,EAAD,CAAO7E,UAAU,OAAjB,UACI,gCACA,+BACI,oBAAI8E,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,0BAGJ,gCACCb,iB,GAlEHR,aA2EPC,I,wCC3ETqB,E,kDAaF,WAAYhH,GAAQ,IAAD,8BACf,cAAMA,IAZViH,UAAY,CACRX,OAAQ,GACRP,MAAO,GACPQ,OAAQ,GACRC,MAAO,GACPU,KAAM,GACNT,OAAQ,EACRU,QAAS,KACTC,KAAM,GAKN,EAAKxC,MAAQ,CACTyC,KAAM,EAAKJ,WAEf,EAAKK,aAAe,EAAKA,aAAavC,KAAlB,gBACpB,EAAKwC,aAAe,EAAKA,aAAaxC,KAAlB,gBANL,E,4FASnB,4BAAArE,EAAA,yDAC0C,QAAlCsE,KAAKhF,MAAMwH,MAAMC,OAAO1B,MADhC,gCAEiChF,MAAM,SAAD,OAAUiE,KAAKhF,MAAMwH,MAAMC,OAAO1B,QAFxE,8BAEkF9E,OAFlF,OAEckF,EAFd,OAGQnB,KAAKC,SAAS,CAACoC,KAAMlB,IAH7B,gD,gFAOA,SAAauB,GACT,IAAMjF,EAASiF,EAAMjF,OACfP,EAAQO,EAAOP,MACfyF,EAAOlF,EAAOkF,KAChBN,EAAI,eAAOrC,KAAKJ,MAAMyC,MAC1BA,EAAKM,GAAQzF,EACb8C,KAAKC,SAAS,CAACoC,W,iEAGvB,WAAmBK,GAAnB,eAAAhH,EAAA,6DACIgH,EAAME,iBACCP,EAAQrC,KAAKJ,MAAbyC,KAFX,SAIUtG,MAAM,SAA8C,QAAlCiE,KAAKhF,MAAMwH,MAAMC,OAAO1B,MAAmB,IAAMsB,EAAKtB,MAAQ,IAAK,CACvFnF,OAA2C,QAAlCoE,KAAKhF,MAAMwH,MAAMC,OAAO1B,MAAmB,MAAQ,OAC5DlF,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpB4C,KAAMC,KAAKC,UAAU0D,KAV7B,OAYIrC,KAAKhF,MAAM6H,QAAQC,KAAK,SAZ5B,gD,2EAeI,WACI,IAAOT,EAAQrC,KAAKJ,MAAbyC,KACDhD,EAAQ,6BAAKgD,EAAKtB,MAAQ,WAAa,YAE7C,OAAO,gCACH,cAAC,EAAD,IACA,eAACa,EAAA,EAAD,WACKvC,EACD,eAAC0D,EAAA,EAAD,CAAMC,SAAUhD,KAAKuC,aAArB,UACI,eAACU,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAOC,IAAI,SAAX,oBACA,cAACC,EAAA,EAAD,CAAOpG,KAAK,OAAO2F,KAAK,SAASU,GAAG,SAASnG,MAAOmF,EAAKf,QAAU,GAC5DhE,SAAU0C,KAAKsC,aAAclF,aAAa,cAErD,eAAC6F,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAOC,IAAI,QAAX,mBACA,cAACC,EAAA,EAAD,CAAOpG,KAAK,OAAO2F,KAAK,QAAQU,GAAG,QAAQnG,MAAOmF,EAAKtB,OAAS,GACzDzD,SAAU0C,KAAKsC,aAAclF,aAAa,aAErD,eAAC6F,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAOC,IAAI,SAAX,oBACA,cAACC,EAAA,EAAD,CAAOpG,KAAK,OAAO2F,KAAK,SAASU,GAAG,SAASnG,MAAOmF,EAAKd,QAAU,GAC5DjE,SAAU0C,KAAKsC,aAAclF,aAAa,cAErD,eAAC6F,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAOC,IAAI,QAAX,mBACA,cAACC,EAAA,EAAD,CAAOpG,KAAK,OAAO2F,KAAK,QAAQU,GAAG,QAAQnG,MAAOmF,EAAKb,OAAS,GACzDlE,SAAU0C,KAAKsC,aAAclF,aAAa,aAErD,eAAC6F,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAOC,IAAI,SAAX,oBACA,cAACC,EAAA,EAAD,CAAOpG,KAAK,SAAS2F,KAAK,SAASU,GAAG,SAASnG,MAAOmF,EAAKZ,QAAU,GAC9DnE,SAAU0C,KAAKsC,aAAclF,aAAa,cAGrD,eAAC6F,EAAA,EAAD,WACI,cAAC,IAAD,CAAQ9C,MAAM,UAAUnD,KAAK,SAA7B,kBAAoD,IACpD,cAAC,IAAD,CAAQmD,MAAM,YAAYI,IAAKC,IAAMC,GAAG,QAAxC,oC,GA1FFC,aAkGP4C,cAAWtB,GCjGpBuB,E,4JACJ,WACE,OACI,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW3F,IACxC,cAAC,IAAD,CAAOyF,KAAK,QAAQC,OAAO,EAAMC,UAAW/C,IAC5C,cAAC,IAAD,CAAO6C,KAAK,eAAeE,UAAW1B,a,GAPhCtB,aAcH6C,ICRAI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/C,MAAK,YAAkD,IAA/CgD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjF,SAASkF,eAAe,SAM1BX,M","file":"static/js/main.1b32e5d3.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../style.css';\n\n\nexport default function Overview(props) {\n\n    const PARCEL = [{}];\n\n    const [parcel, setParcel] = useState(PARCEL);\n    const [loading, setLoading] = useState(true);\n\n    const link = \"https://api.aftership.com/v4/trackings/\" + props.company + \"/\" + props.number + \"/\";\n\n    useEffect(() => {\n        async function fetchData() {\n            const options = {\n                method: 'GET',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    'aftership-api-key': '612c49aa-28f8-4543-b7d9-1ea47b7f1510'\n                }\n            }\n            const response = await fetch(link, options);      \n            const myjson = await response.json();\n            //console.log(myjson.data.tracking.slug);\n            setParcel(myjson);\n            setTimeout(() => {setLoading(false)}, 750);\n        }\n        fetchData();\n      }, []);\n\n      return (\n        <tbody>\n            <tr key={\"number\" + props.index} align=\"center\">\n                <td>{loading ? <div>Cargando</div> : parcel.data.tracking ?  <img src={process.env.PUBLIC_URL + \"/images/\" + parcel.data.tracking.slug + \".png\"} height=\"200\" widht=\"200\"></img> : <div></div>}</td>\n               <td>{loading ? <div>Cargando</div> : parcel.data.tracking ? <p>{parcel.data.tracking.slug}</p> : <div></div>}</td>\n               <td></td>\n               <td>{loading ? <div>Cargando</div> : parcel.data.tracking ? <p>{parcel.data.tracking.subtag_message}</p> : <div></div>}</td>\n            </tr>\n        </tbody>\n    );\n\n}","import React from 'react';\nimport {Button} from 'react-bootstrap';\nimport '../style.css';\n\nexport default function Add(props) {\n\n    function handleShipNumber(e){\n        props.handleShipNumber(e);\n    }\n\n    function handleCompany(e){\n        props.handleCompany(e);\n    }\n\n    function clickSearch(){\n        props.clickSearch();\n    }\n\n    function clickSave(){\n        props.clickSave();\n    }\n\n    return (  \n        <div class=\"row\">\n            <input type=\"text\" className=\"form\" value={props.ship_number} autoComplete=\"off\" placeholder = \"Introduzca numero de pedido\" onChange = {e => handleShipNumber(e.target.value)}/>\n            <br/>\n            <input type=\"text\" className=\"form\" value={props.company} autoComplete=\"off\" onChange = {e => handleCompany(e.target.value)}/>\n            <br/>\n            <Button className=\"itemNarrow\"  onClick={() => clickSearch()}> Buscar Pedido </Button>\n            <Button className=\"itemNarrow\"  onClick={() => clickSave()}> Confirmar </Button>\n        </div>\n    );\n\n\n}","import React, { Component, useState, useEffect } from 'react';\nimport './style.css';\nimport { Link } from 'react-router-dom';\nimport { Button, Container } from 'react-bootstrap';\nimport Overview from \"./parcelList/Overview\";\nimport Add from \"./parcelList/Add\";\n\nfunction Home() {\n\n    const PARCEL_ARRAY = [];\n    const SHIP_NUMBER = \"\";\n    const COMPANY = \"\";\n    const NUMBER_ARRAY = [];\n    const COMPANY_ARRAY = [];\n\n    const [parcel_array, setParcelArray] = useState (PARCEL_ARRAY);\n    const [ship_number, setShipNumber] = useState(SHIP_NUMBER);\n    const [company, setCompany] = useState (COMPANY);\n    const [number_array, setNumberArray] = useState (NUMBER_ARRAY);\n    const [company_array, setCompanyArray] = useState(COMPANY_ARRAY);\n\n    useEffect(() => {\n        // Update the document title using the browser API\n        document.title = \"Home\";\n        \n        // Database Acesss\n        async function fetchData(){\n            const response = await fetch(\"/ships/email/paco@gmail.com\");\n            const myjson = await response.json();\n            var data = []; \n            data = myjson.map((parcel, i) => parcel.pedido);\n            setNumberArray(data);\n            data = myjson.map((parcel, i) => parcel.company);\n            setCompanyArray(data);\n        }\n        fetchData();\n    }, []);\n\n    function cargar(){\n        var array = parcel_array;\n        number_array.map((parcel, i) => {\n            var shipment = {\"shipnumber\" : parcel, \"company\" : company_array[i]};\n            console.log(shipment);\n            array = [...array, shipment];\n        })\n        setParcelArray(array);\n    }\n\n    async function guardar(){\n        \n        var log = {\"name\":\"melon\",\"email\": \"paco@gmail.com\", \"pass\": \"...\", \"company\": company, \n                        \"pedido\": ship_number, \"status\": \"...\",\"address\":\"...\"};\n        await fetch('/ships', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(log)\n        });\n    }\n\n    function handleShipNumber(a){\n        setShipNumber(a);\n    }\n\n    function handleCompany(a){\n        //setCompany(a);\n    }\n\n    async function uploadParcel(){\n        const options = {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'aftership-api-key': '612c49aa-28f8-4543-b7d9-1ea47b7f1510'\n            },\n            body: JSON.stringify({tracking: {tracking_number: ship_number}})\n        };\n            \n        const response = await fetch('https://api.aftership.com/v4/trackings', options);\n        const myjson = await response.json();\n        setCompany(myjson.data.tracking.slug);\n    }\n\n    function saveParcel(){\n        var shipment = {\"shipnumber\" : ship_number, \"company\" : company};\n        var array = [...parcel_array, shipment];\n        guardar();\n        setParcelArray(array);\n        setShipNumber(\"\");\n        setCompany(\"\");\n    }\n\n    return (\n        <div class=\"aside\">\n\n            <br></br>\n            <br></br>\n            <br></br>\n\n            <img src={process.env.PUBLIC_URL + \"/images/Logo.png\"} height=\"150\" widht=\"150\" alt=\"Image\" align = \"center\"></img>\n\n            <div class=\"row\">\n                <Button class=\"ghost\">Pedidos</Button>\n                <Button>Cerrar sesion</Button>\n                \n            </div>\n   \n            <br></br>\n            <br></br>\n\n            <div class=\"row\">\n                <p>paco@gmail.com</p>\n                <Button onClick={() => cargar()}>Cargar</Button>\n            </div>\n\n            <br></br>\n            <br></br>\n\n            <Add ship_number={ship_number} company={company} handleShipNumber={a => handleShipNumber(a)} \n                handleCompany={a => handleCompany(a)} clickSearch={() => uploadParcel()} clickSave={()=> saveParcel()}/>\n\n            <br></br>\n\n            <div class=\"col-12  mainPagecontainer \">\n                <h2 class=\"blog-post-title\">Pedidos</h2>\n\n                <div class=\"aside\">\n                    <table>\n                    {parcel_array.map((parcel, i) => {return (<Overview index = {i} number={parcel.shipnumber} \n                        company={parcel.company}/>)})}\n                    </table>\n                </div>   \n            </div>\n\n            <br></br>\n            <br></br>\n\n            <img src={process.env.PUBLIC_URL + \"/images/LogoSinTexto.png\"} height=\"150\" widht=\"150\" alt=\"Image\" align = \"center\"/>            \n\n        </div>    \n\n\n    );\n  }\n\n\nexport default Home;","import React, {Component} from 'react';\nimport {Navbar, NavbarBrand} from 'reactstrap';\nimport {Link} from 'react-router-dom';\n\nexport default class AppNavbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {isOpen: false};\n        this.toggle = this.toggle.bind(this);\n    }\n\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        return <Navbar color=\"dark\" dark expand=\"md\">\n            <NavbarBrand tag={Link} to=\"/\">Home</NavbarBrand>\n        </Navbar>;\n    }\n}","import React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\n\nclass TFGList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {tfgs: []};\n        this.remove = this.remove.bind(this);\n    }\n\n    componentDidMount() {\n        fetch('/tfgs')\n            .then(response => response.json())\n            .then(data => this.setState({tfgs: data}));\n    }\n\n    async remove(email) {\n        await fetch(`/tfgs/${email}`, {\n            method: 'DELETE',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        }).then(() => {\n            let updatedTFGs = [...this.state.tfgs].filter(i => i.email !== email);\n            this.setState({tfgs: updatedTFGs});\n        });\n    }\n\n    render() {\n        const {tfgs} = this.state;\n\n        const tfgList = tfgs.map(tfg => {\n            return <tr key={tfg.email}>\n                <td style={{whiteSpace: 'nowrap'}}>{tfg.nombre}</td>\n                <td>{tfg.email}</td>\n                <td>{tfg.titulo}</td>\n                <td>{tfg.tutor}</td>\n                <td>{tfg.status}</td>\n                <td>\n                    <ButtonGroup>\n                        <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/tfgs/\" + tfg.email}>Edit</Button>\n                        <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(tfg.email)}>Delete</Button>\n                    </ButtonGroup>\n                </td>\n            </tr>\n        });\n\n        return (\n            <div>\n                <AppNavbar/>\n                <Container fluid>\n                    <div className=\"float-right\">\n                        <Button color=\"success\" tag={Link} to=\"/tfgs/new\">Add TFG</Button>\n                    </div>\n                    <h3>TFGs</h3>\n                    <Table className=\"mt-4\">\n                        <thead>\n                        <tr>\n                            <th width=\"15%\">Nombre</th>\n                            <th width=\"15%\">Email</th>\n                            <th width=\"15%\">Titulo</th>\n                            <th width=\"15%\">Tutor</th>\n                            <th width=\"10%\">Estado</th>\n                            <th width=\"30%\">Actions</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {tfgList}\n                        </tbody>\n                    </Table>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default TFGList;","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\n\nclass TFGEdit extends Component {\n\n    emptyItem = {\n        nombre: '',\n        email: '',\n        titulo: '',\n        tutor: '',\n        pass: '',\n        status: 1,\n        memoria: null,\n        nota: 0\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: this.emptyItem\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        if (this.props.match.params.email !== 'new') { // \n            const tfg = await (await fetch(`/tfgs/${this.props.match.params.email}`)).json();\n            this.setState({item: tfg});\n        }\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let item = {...this.state.item};\n        item[name] = value;\n        this.setState({item});\n    }\n\nasync handleSubmit(event) {\n    event.preventDefault();\n    const {item} = this.state;\n\n    await fetch('/tfgs' + ((this.props.match.params.email !== 'new') ? '/' + item.email : ''), {\n        method: (this.props.match.params.email !== 'new') ? 'PUT' : 'POST', //(item.email) ? 'PUT' : 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(item),\n    });\n    this.props.history.push('/tfgs');\n}\n\n    render() {\n        const {item} = this.state;\n        const title = <h2>{item.email ? 'Edit TFG' : 'Add TFG'}</h2>;\n\n        return <div>\n            <AppNavbar/>\n            <Container>\n                {title}\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"nombre\">Nombre</Label>\n                        <Input type=\"text\" name=\"nombre\" id=\"nombre\" value={item.nombre || ''}\n                               onChange={this.handleChange} autoComplete=\"nombre\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"email\">Email</Label>\n                        <Input type=\"text\" name=\"email\" id=\"email\" value={item.email || ''}\n                               onChange={this.handleChange} autoComplete=\"email\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"titulo\">Titulo</Label>\n                        <Input type=\"text\" name=\"titulo\" id=\"titulo\" value={item.titulo || ''}\n                               onChange={this.handleChange} autoComplete=\"titulo\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"tutor\">Tutor</Label>\n                        <Input type=\"text\" name=\"tutor\" id=\"tutor\" value={item.tutor || ''}\n                               onChange={this.handleChange} autoComplete=\"tutor\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"status\">Status</Label>\n                        <Input type=\"number\" name=\"status\" id=\"status\" value={item.status || ''}\n                               onChange={this.handleChange} autoComplete=\"status\"/>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\n                        <Button color=\"secondary\" tag={Link} to=\"/tfgs\">Cancel</Button>\n                    </FormGroup>\n                </Form>\n            </Container>\n        </div>\n    }\n}\n\nexport default withRouter(TFGEdit);","import React, { Component } from 'react';\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport TFGList from './TFGList';\nimport TFGEdit from \"./TFGEdit\";\n\nclass App extends Component {\n  render() {\n    return (\n        <Router>\n          <Switch>\n            <Route path='/' exact={true} component={Home}/>\n            <Route path='/tfgs' exact={true} component={TFGList}/>\n            <Route path='/tfgs/:email' component={TFGEdit}/>\n          </Switch>\n        </Router>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}