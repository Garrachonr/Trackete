{"version":3,"sources":["Home.js","AppNavbar.js","TFGList.js","TFGEdit.js","login.js","App.js","reportWebVitals.js","index.js"],"names":["Home","AppNavbar","props","state","isOpen","toggle","bind","this","setState","Navbar","color","dark","expand","NavbarBrand","tag","Link","to","Component","TFGList","tfgs","remove","fetch","then","response","json","data","email","a","method","headers","updatedTFGs","filter","i","tfgList","map","tfg","style","whiteSpace","nombre","titulo","tutor","status","ButtonGroup","size","onClick","Container","fluid","className","Table","width","TFGEdit","emptyItem","pass","memoria","nota","item","handleChange","handleSubmit","match","params","event","target","value","name","preventDefault","body","JSON","stringify","history","push","title","Form","onSubmit","FormGroup","Label","for","Input","type","id","onChange","autoComplete","withRouter","Login","class","src","align","placeholder","Button","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a2f0c95.chunk.js","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport './style.css';\nimport { Link } from 'react-router-dom';\nimport { Button, Container } from 'react-bootstrap';\nimport Overview from \"./parcelList/Overview\";\nimport Add from \"./parcelList/Add\";\n\nfunction Home() {\n\n    const PARCEL_ARRAY = [];\n    const SHIP_NUMBER = \"\";\n    const COMPANY = \"\";\n    const NUMBER_ARRAY = [];\n    const COMPANY_ARRAY = [];\n\n    const [parcel_array, setParcelArray] = useState (PARCEL_ARRAY);\n    const [ship_number, setShipNumber] = useState(SHIP_NUMBER);\n    const [company, setCompany] = useState (COMPANY);\n    const [number_array, setNumberArray] = useState (NUMBER_ARRAY);\n    const [company_array, setCompanyArray] = useState(COMPANY_ARRAY);\n\n    useEffect(() => {\n        // Update the document title using the browser API\n        document.title = \"Home\";\n        \n        // Database Acesss\n        async function fetchData(){\n            const response = await fetch(\"/ships/email/paco@gmail.com\");\n            const myjson = await response.json();\n            var data = []; \n            data = myjson.map((parcel, i) => parcel.pedido);\n            setNumberArray(data);\n            data = myjson.map((parcel, i) => parcel.company);\n            setCompanyArray(data);\n        }\n        fetchData();\n    }, []);\n\n    function cargar(){\n        var array = parcel_array;\n        number_array.map((parcel, i) => {\n            var shipment = {\"shipnumber\" : parcel, \"company\" : company_array[i]};\n            console.log(shipment);\n            array = [...array, shipment];\n        })\n        setParcelArray(array);\n    }\n\n    async function guardar(){\n        \n        var log = {\"name\":\"melon\",\"email\": \"paco@gmail.com\", \"pass\": \"...\", \"company\": company, \n                        \"pedido\": ship_number, \"status\": \"...\",\"address\":\"...\"};\n        await fetch('/ships', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(log)\n        });\n    }\n\n    function handleShipNumber(a){\n        setShipNumber(a);\n    }\n\n    function handleCompany(a){\n        //setCompany(a);\n    }\n\n    async function uploadParcel(){\n        const options = {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'aftership-api-key': '612c49aa-28f8-4543-b7d9-1ea47b7f1510'\n            },\n            body: JSON.stringify({tracking: {tracking_number: ship_number}})\n        };\n            \n        const response = await fetch('https://api.aftership.com/v4/trackings', options);\n        const myjson = await response.json();\n        setCompany(myjson.data.tracking.slug);\n    }\n\n    function saveParcel(){\n        var shipment = {\"shipnumber\" : ship_number, \"company\" : company};\n        var array = [...parcel_array, shipment];\n        guardar();\n        setParcelArray(array);\n        setShipNumber(\"\");\n        setCompany(\"\");\n    }\n\n    return (\n        <div class=\"aside\">\n\n            <br></br>\n            <br></br>\n            <br></br>\n\n            <img src={process.env.PUBLIC_URL + \"/images/Logo.png\"} height=\"150\" widht=\"150\" alt=\"Image\" align = \"center\"></img>\n\n            <div class=\"row\">\n                <Button class=\"ghost\">Pedidos</Button>\n                <Button>Cerrar sesion</Button>\n                \n            </div>\n   \n            <br></br>\n            <br></br>\n\n            <div class=\"row\">\n                <p>paco@gmail.com</p>\n                <Button onClick={() => cargar()}>Cargar</Button>\n            </div>\n\n            <br></br>\n            <br></br>\n\n            <Add ship_number={ship_number} company={company} handleShipNumber={a => handleShipNumber(a)} \n                handleCompany={a => handleCompany(a)} clickSearch={() => uploadParcel()} clickSave={()=> saveParcel()}/>\n\n            <br></br>\n\n            <div class=\"col-12  mainPagecontainer \">\n                <h2 class=\"blog-post-title\">Pedidos</h2>\n\n                <div class=\"aside\">\n                    <table>\n                    {parcel_array.map((parcel, i) => {return (<Overview index = {i} number={parcel.shipnumber} \n                        company={parcel.company}/>)})}\n                    </table>\n                </div>   \n            </div>\n\n            <br></br>\n            <br></br>\n\n            <img src={process.env.PUBLIC_URL + \"/images/LogoSinTexto.png\"} height=\"150\" widht=\"150\" alt=\"Image\" align = \"center\"/>            \n\n        </div>    \n\n\n    );\n  }\n\n\nexport default Home;","import React, {Component} from 'react';\nimport {Navbar, NavbarBrand} from 'reactstrap';\nimport {Link} from 'react-router-dom';\n\nexport default class AppNavbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {isOpen: false};\n        this.toggle = this.toggle.bind(this);\n    }\n\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        return <Navbar color=\"dark\" dark expand=\"md\">\n            <NavbarBrand tag={Link} to=\"/\">Home</NavbarBrand>\n        </Navbar>;\n    }\n}","import React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\n\nclass TFGList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {tfgs: []};\n        this.remove = this.remove.bind(this);\n    }\n\n    componentDidMount() {\n        fetch('/tfgs')\n            .then(response => response.json())\n            .then(data => this.setState({tfgs: data}));\n    }\n\n    async remove(email) {\n        await fetch(`/tfgs/${email}`, {\n            method: 'DELETE',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        }).then(() => {\n            let updatedTFGs = [...this.state.tfgs].filter(i => i.email !== email);\n            this.setState({tfgs: updatedTFGs});\n        });\n    }\n\n    render() {\n        const {tfgs} = this.state;\n\n        const tfgList = tfgs.map(tfg => {\n            return <tr key={tfg.email}>\n                <td style={{whiteSpace: 'nowrap'}}>{tfg.nombre}</td>\n                <td>{tfg.email}</td>\n                <td>{tfg.titulo}</td>\n                <td>{tfg.tutor}</td>\n                <td>{tfg.status}</td>\n                <td>\n                    <ButtonGroup>\n                        <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/tfgs/\" + tfg.email}>Edit</Button>\n                        <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(tfg.email)}>Delete</Button>\n                    </ButtonGroup>\n                </td>\n            </tr>\n        });\n\n        return (\n            <div>\n                <AppNavbar/>\n                <Container fluid>\n                    <div className=\"float-right\">\n                        <Button color=\"success\" tag={Link} to=\"/tfgs/new\">Add TFG</Button>\n                    </div>\n                    <h3>TFGs</h3>\n                    <Table className=\"mt-4\">\n                        <thead>\n                        <tr>\n                            <th width=\"15%\">Nombre</th>\n                            <th width=\"15%\">Email</th>\n                            <th width=\"15%\">Titulo</th>\n                            <th width=\"15%\">Tutor</th>\n                            <th width=\"10%\">Estado</th>\n                            <th width=\"30%\">Actions</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {tfgList}\n                        </tbody>\n                    </Table>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default TFGList;","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\n\nclass TFGEdit extends Component {\n\n    emptyItem = {\n        nombre: '',\n        email: '',\n        titulo: '',\n        tutor: '',\n        pass: '',\n        status: 1,\n        memoria: null,\n        nota: 0\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: this.emptyItem\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async componentDidMount() {\n        if (this.props.match.params.email !== 'new') { // \n            const tfg = await (await fetch(`/tfgs/${this.props.match.params.email}`)).json();\n            this.setState({item: tfg});\n        }\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let item = {...this.state.item};\n        item[name] = value;\n        this.setState({item});\n    }\n\nasync handleSubmit(event) {\n    event.preventDefault();\n    const {item} = this.state;\n\n    await fetch('/tfgs' + ((this.props.match.params.email !== 'new') ? '/' + item.email : ''), {\n        method: (this.props.match.params.email !== 'new') ? 'PUT' : 'POST', //(item.email) ? 'PUT' : 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(item),\n    });\n    this.props.history.push('/tfgs');\n}\n\n    render() {\n        const {item} = this.state;\n        const title = <h2>{item.email ? 'Edit TFG' : 'Add TFG'}</h2>;\n\n        return <div>\n            <AppNavbar/>\n            <Container>\n                {title}\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"nombre\">Nombre</Label>\n                        <Input type=\"text\" name=\"nombre\" id=\"nombre\" value={item.nombre || ''}\n                               onChange={this.handleChange} autoComplete=\"nombre\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"email\">Email</Label>\n                        <Input type=\"text\" name=\"email\" id=\"email\" value={item.email || ''}\n                               onChange={this.handleChange} autoComplete=\"email\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"titulo\">Titulo</Label>\n                        <Input type=\"text\" name=\"titulo\" id=\"titulo\" value={item.titulo || ''}\n                               onChange={this.handleChange} autoComplete=\"titulo\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"tutor\">Tutor</Label>\n                        <Input type=\"text\" name=\"tutor\" id=\"tutor\" value={item.tutor || ''}\n                               onChange={this.handleChange} autoComplete=\"tutor\"/>\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"status\">Status</Label>\n                        <Input type=\"number\" name=\"status\" id=\"status\" value={item.status || ''}\n                               onChange={this.handleChange} autoComplete=\"status\"/>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\n                        <Button color=\"secondary\" tag={Link} to=\"/tfgs\">Cancel</Button>\n                    </FormGroup>\n                </Form>\n            </Container>\n        </div>\n    }\n}\n\nexport default withRouter(TFGEdit);","import React, { Component, useState, useEffect } from 'react';\nimport './style.css';\nimport { Link } from 'react-router-dom';\nimport { Button, Container } from 'react-bootstrap';\n\nfunction Login() {\n\n\n    return (\n\n\n\n        <div class=\"login\">\n\n            <h2><img src={process.env.PUBLIC_URL + \"/images/Logo.png\"} ></img></h2>\n\n            <div class=\"container\" id=\"container\">\n\n                    <br></br>\n                \n\n                    <h2 align=\"center\">Iniciar Sesión</h2>\n                    \n                    <form>\n                        <label>\n                            <input type = \"text\" name =\"name\" placeholder='Usuario o Email'/>\n                        </label>\n                            \n\n                    </form>\n\n \n\n\n                    <form>\n                        <label>\n                            <input type=\"text\" name=\"name\" placeholder='Contraseña' />\n                        </label>\n                    </form>\n\n                    <h2>\n                        <Button align=\"center\">INICIAR SESIÓN</Button>   \n                    </h2>\n\n                    <br></br>\n                    <br></br>\n                    <br></br>\n\n\n                    <h2>¿Todavía no te has registrado?</h2>\n                    <h5>Date de alta en nuestro servicio</h5>\n                    <h2>\n                        <Button align=\"center\">Registrarse</Button>\n                    </h2>\n                    \n \n\n\n\n               \n  \n            </div>\n        </div>    \n\n    );\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport TFGList from './TFGList';\nimport TFGEdit from \"./TFGEdit\";\nimport Login from './login';\n\nclass App extends Component {\n  render() {\n    return (\n        <Router>\n          <Switch>\n            <Route path='/' exact={true} component={Login}/>\n            <Route path='/tfgs' exact={true} component={TFGList}/>\n            <Route path='/tfgs/:email' component={TFGEdit}/>\n          </Switch>\n        </Router>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}